<?xml version="1.0" encoding="UTF-8"?>
<quiz> 
  <question type="truefalse">
    <name>
        <text><![CDATA[Hot reloading es un módulo que permite que sólo tengamos que pulsar F5 para actualizar una aplicación React en el navegador aplicando los últimos cambios realizados en el código.]]></text>
    </name>
    <questiontext>
        <text><![CDATA[Hot reloading es un módulo que permite que sólo tengamos que pulsar F5 para actualizar una aplicación React en el navegador aplicando los últimos cambios realizados en el código.]]></text>
    </questiontext>
    
    <answer fraction="0">
        <text>true</text>
    </answer>
    <answer fraction="100">
        <text>false</text>
    </answer>

  
    
</question>
  <question type="truefalse">
    <name>
        <text><![CDATA[Las tres fases del ciclo de vida de un componente de React son: Montado, Actualización y Desmontado.]]></text>
    </name>
    <questiontext>
        <text><![CDATA[Las tres fases del ciclo de vida de un componente de React son: Montado, Actualización y Desmontado.]]></text>
    </questiontext>
    
    <answer fraction="100">
        <text>true</text>
    </answer>
    <answer fraction="0">
        <text>false</text>
    </answer>

  
    
</question>
  <question type="truefalse">
    <name>
        <text><![CDATA[El estado de una aplicación que usa Redux se almacena como un objeto en un único store. ]]></text>
    </name>
    <questiontext>
        <text><![CDATA[El estado de una aplicación que usa Redux se almacena como un objeto en un único store. ]]></text>
    </questiontext>
    
    <answer fraction="100">
        <text>true</text>
    </answer>
    <answer fraction="0">
        <text>false</text>
    </answer>

  
    
</question>
  <question type="truefalse">
    <name>
        <text><![CDATA[Cuando utilizamos Redux, podemos llamar a la función Date.now() dentro de un reducer.]]></text>
    </name>
    <questiontext>
        <text><![CDATA[Cuando utilizamos Redux, podemos llamar a la función Date.now() dentro de un reducer.]]></text>
    </questiontext>
    
    <answer fraction="0">
        <text>true</text>
    </answer>
    <answer fraction="100">
        <text>false</text>
    </answer>

  
    
</question>
  <question type="truefalse">
    <name>
        <text><![CDATA[React y React Native utilizan el mismo algoritmo de reconciliación pero distintos renderizadores.]]></text>
    </name>
    <questiontext>
        <text><![CDATA[React y React Native utilizan el mismo algoritmo de reconciliación pero distintos renderizadores.]]></text>
    </questiontext>
    
    <answer fraction="100">
        <text>true</text>
    </answer>
    <answer fraction="0">
        <text>false</text>
    </answer>

  
    
  </question>
  <question type="truefalse">
    <name>
        <text><![CDATA[En React Native es posible definir estilos tanto directamente en los propios componentes como en objetos JavaScript reutilizables.]]></text>
    </name>
    <questiontext>
        <text><![CDATA[En React Native es posible definir estilos tanto directamente en los propios componentes como en objetos JavaScript reutilizables.]]></text>
    </questiontext>
    
    <answer fraction="100">
        <text>true</text>
    </answer>
    <answer fraction="0">
        <text>false</text>
    </answer>

  
    
</question>
  <question type="truefalse">
    <name>
        <text><![CDATA[El atributo flex de Flexbox permite a un contenedor especificar las dimensiones de sus hijos.]]></text>
    </name>
    <questiontext>
        <text><![CDATA[El atributo flex de Flexbox permite a un contenedor especificar las dimensiones de sus hijos.]]></text>
    </questiontext>
    
    <answer fraction="0">
        <text>true</text>
    </answer>
    <answer fraction="100">
        <text>false</text>
    </answer>

  
    
</question>
  <question type="truefalse">
    <name>
        <text><![CDATA[El componente TouchableHighlight de React Native tiene una propiedad onClick que permite asociar una función que será llamada cuando el usuario pulse el botón.]]></text>
    </name>
    <questiontext>
        <text><![CDATA[El componente TouchableHighlight de React Native tiene una propiedad onClick que permite asociar una función que será llamada cuando el usuario pulse el botón.]]></text>
    </questiontext>
    
    <answer fraction="0">
        <text>true</text>
    </answer>
    <answer fraction="100">
        <text>false</text>
    </answer>

  
    
  </question>

  <question type="truefalse">
    <name>
        <text><![CDATA[Todas las funciones de la API Fetch de React Native devuelven promesas, por lo que se puede utilizar la palabra clave await para esperar su resultado.]]></text>
    </name>
    <questiontext>
        <text><![CDATA[Todas las funciones de la API Fetch de React Native devuelven promesas, por lo que se puede utilizar la palabra clave await para esperar su resultado.]]></text>
    </questiontext>
    
    <answer fraction="100">
        <text>true</text>
    </answer>
    <answer fraction="0">
        <text>false</text>
    </answer>
    
  </question>

  <question type="truefalse">
    <name>
      <text>
        <![CDATA[El código que indica cómo se va a mostrar el contenido de un componente de React...]]>
      </text>
    </name>
    <questiontext format="html">
      <text>
        <![CDATA[El código que indica cómo se va a mostrar el contenido de un componente de React se especifica en el método componentDidMount.]]>
      </text>
    </questiontext>
    <answer fraction="0">
        <text>true</text>
    </answer>
    <answer fraction="100">
        <text>false</text>
    </answer>
  </question>

  <question type="truefalse">
    <name>
      <text>
        <![CDATA[React props are a JS object that should be immutable.]]>
      </text>
    </name>
    <questiontext format="html">
      <text>
        <![CDATA[Las props de React son un objeto JS que debería ser inmutable.]]>
      </text>
    </questiontext>
    <answer fraction="100">
      <text>
        true
      </text>
    </answer>
    <answer fraction="0">
      <text>
        false
      </text>
    </answer>
  </question>
  <question type="truefalse">
    <name>
      <text>
        <![CDATA[Redux es un fichero que indica las dependencias del proyecto, los scripts que se...]]>
      </text>
    </name>
    <questiontext format="html">
      <text>
        <![CDATA[Redux es un fichero que indica las dependencias del proyecto, los scripts de arranque, etc.]]>
      </text>
    </questiontext>
    <answer fraction="0">
      <text>
        <![CDATA[true]]>
      </text>
    </answer>
    <answer fraction="100">
      <text>
        <![CDATA[false]]>
      </text>
    </answer>
  </question>

  <question type="truefalse">
    <name>
      <text>
        <![CDATA[Redux es una librería JavaScript que permite tener varios stores para distribuir...]]>
      </text>
    </name>
    <questiontext format="html">
      <text>
        <![CDATA[Redux es una librería JavaScript que permite tener varios stores para distribuir el estado de la aplicación.]]>
      </text>
    </questiontext>
    <answer fraction="0">
      <text>
        <![CDATA[true]]>
      </text>
    </answer>
    <answer fraction="100">
      <text>
        <![CDATA[false]]>
      </text>
    </answer>
  </question>
  <question type="truefalse">
    <name>
      <text>
        <![CDATA[En una aplicación de React, las peticiones a una API REST se deben hacer en el m...]]>
      </text>
    </name>
    <questiontext format="html">
      <text>
        <![CDATA[En una aplicación de React, las peticiones a una API REST se deben hacer en el método render() de los componentes para que la información se actualice cada vez que se repinte el componente. ]]>
      </text>
    </questiontext>
    <answer fraction="0">
      <text>
        <![CDATA[true]]>
      </text>
    </answer>
    <answer fraction="100">
      <text>
        <![CDATA[false]]>
      </text>
    </answer>
  </question>
  <question type="truefalse">
    <name>
      <text>
        <![CDATA[En React el flujo de datos es bidireccional (two way data binding)]]>
      </text>
    </name>
    <questiontext format="html">
      <text>
        <![CDATA[En React, el flujo de datos es bidireccional  (two way data binding)]]>
      </text>
    </questiontext>
    <answer fraction="0">
      <text>
        <![CDATA[true]]>
      </text>
    </answer>
    <answer fraction="100">
      <text>
        <![CDATA[false]]>
      </text>
    </answer>
  </question>
  <question type="truefalse">
    <name>
      <text>
        <![CDATA[JSX is a Javascript extension, so browsers are capable of interpreting it. ]]>
      </text>
    </name>
    <questiontext format="html">
      <text>
        <![CDATA[JSX es una extensión de JS, así que los navegadores son capaces de interpretarla de forma inmediata.]]>
      </text>
    </questiontext>
    <answer fraction="0">
      <text>
        <![CDATA[true]]>
      </text>
    </answer>
    <answer fraction="100">
      <text>
        <![CDATA[false]]>
      </text>
    </answer>
  </question>
  <question type="truefalse">
    <name>
      <text>
        <![CDATA[En una aplicación de React Redux suelen conectarse todos los componentes directa...]]>
      </text>
    </name>
    <questiontext format="html">
      <text>
        <![CDATA[En una aplicación de React Redux suelen conectarse todos los componentes directamente con Redux]]>
      </text>
    </questiontext>
    <answer fraction="0">
      <text>
        <![CDATA[true]]>
      </text>
    </answer>
    <answer fraction="100">
      <text>
        <![CDATA[false]]>
      </text>
    </answer>
  </question>
  <question type="multichoice">
    <name>
      <text>
        <![CDATA[Where should we place an AJAX call to get some data to render the component?]]>
      </text>
    </name>
    <questiontext format="html">
      <text>
        <![CDATA[¿Dónde deberíamos situar una petición AJAX/fetch para pedir datos y que los pinte un componente?]]>
      </text>
    </questiontext>
    <answer fraction="100.000">
      <text>
        <![CDATA[en el método componentDidMount]]>
      </text>
    </answer>
    <answer fraction="0">
      <text>
        <![CDATA[en el constructor, ya que necesitamos los datos para pintar el componente y no se puede hacer de otra manera]]>
      </text>
    </answer>
    <answer fraction="0">
      <text>
        <![CDATA[en el método render]]>
      </text>
    </answer>
    <answer fraction="0">
      <text>
        <![CDATA[No se puede hacer este tipo de llamadas desde los componentes de React, tienen que realizarse en módulos externos y pasarles las props a los componentes.]]>
      </text>
    </answer>
    <shuffleanswers>1</shuffleanswers>
    <single>true</single>
    <answernumbering>ABCD</answernumbering>
  </question>
  <question type="multichoice">
    <name>
      <text>
        <![CDATA[Which of the following sentences is FALSE about the React Component constructor?]]>
      </text>
    </name>
    <questiontext format="html">
      <text>
        <![CDATA[¿Cuál de las siguientes frases sobre el constructor de un componente de React es FALSA?]]>
      </text>
    </questiontext>
    <answer fraction="100.000">
      <text>
        <![CDATA[Es un método obligatorio que se usa para crear el componente]]>
      </text>
    </answer>
    <answer fraction="0">
      <text>
        <![CDATA[Su primera linea es una llamada a super(props))]]>
      </text>
    </answer>
    <answer fraction="0">
      <text>
        <![CDATA[En él se define el estado inicial del componente mediante asignación directa]]>
      </text>
    </answer>
    <answer fraction="0">
      <text>
        <![CDATA[Es un método que se llama durante el montado del componente]]>
      </text>
    </answer>
    <shuffleanswers>1</shuffleanswers>
    <single>true</single>
    <answernumbering>ABCD</answernumbering>
  </question>
  <question type="multichoice">
    <name>
      <text>
        <![CDATA[Which of the following is something that the render method should do?]]>
      </text>
    </name>
    <questiontext format="html">
      <text>
        <![CDATA[Cuál de las siguientes acciones podria realizar el método render?]]>
      </text>
    </questiontext>
    <answer fraction="100.000">
      <text>
        <![CDATA[Llamara a otra función del componente que da formato a un string]]>
      </text>
    </answer>
    <answer fraction="0">
      <text>
        <![CDATA[Llamar a setState(…)]]>
      </text>
    </answer>
    <answer fraction="0">
      <text>
        <![CDATA[Llamar a document.getElementById(…)]]>
      </text>
    </answer>
    <answer fraction="0">
      <text>
        <![CDATA[Llamar a setTimeout(…)]]>
      </text>
    </answer>
    <shuffleanswers>1</shuffleanswers>
    <single>true</single>
    <answernumbering>ABCD</answernumbering>
  </question>
  <question type="multichoice">
    <name>
      <text>
        <![CDATA[What are the required methods that a React Component has to implement?]]>
      </text>
    </name>
    <questiontext format="html">
      <text>
        <![CDATA[¿Cuáles son los métodos obligatorios que tiene que implementar un componente de React?]]>
      </text>
    </questiontext>
    <answer fraction="100.000">
      <text>
        <![CDATA[render]]>
      </text>
    </answer>
    <answer fraction="0">
      <text>
        <![CDATA[constructor y render]]>
      </text>
    </answer>
    <answer fraction="0">
      <text>
        <![CDATA[constructor, render, componentDidMount y componentDidUpdate]]>
      </text>
    </answer>
    <answer fraction="0">
      <text>
        <![CDATA[constructor, render y componentDidMount]]>
      </text>
    </answer>
    <shuffleanswers>1</shuffleanswers>
    <single>true</single>
    <answernumbering>ABCD</answernumbering>
  </question>
  <question type="multichoice">
    <name>
      <text>
        <![CDATA[What is the main difference between React Component state and props?]]>
      </text>
    </name>
    <questiontext format="html">
      <text>
        <![CDATA[¿Cuál es la principal diferencia entre el estado y las props de un componente de React?]]>
      </text>
    </questiontext>
    <answer fraction="100.000">
      <text>
        <![CDATA[El estado es mutable y las props son inmutables]]>
      </text>
    </answer>
    <answer fraction="0">
      <text>
        <![CDATA[Las props se definen en el componente, el estado se pasa como parámetro]]>
      </text>
    </answer>
    <answer fraction="0">
      <text>
        <![CDATA[El estado es único, las props son una serie de características]]>
      </text>
    </answer>
    <answer fraction="0">
      <text>
        <![CDATA[El estado es un valor JS y las props son un objeto JS]]>
      </text>
    </answer>
    <shuffleanswers>1</shuffleanswers>
    <single>true</single>
    <answernumbering>ABCD</answernumbering>
  </question>
  <question type="multichoice">
    <name>
      <text>
        <![CDATA[What are React Component props?]]>
      </text>
    </name>
    <questiontext format="html">
      <text>
        <![CDATA[¿Qué son las props de un componente de React?]]>
      </text>
    </questiontext>
    <answer fraction="100.000">
      <text>
        <![CDATA[Un objeto JS con los parámetros que necesita el componente para crearse]]>
      </text>
    </answer>
    <answer fraction="0">
      <text>
        <![CDATA[Un objeto JS con el estado interno del componente]]>
      </text>
    </answer>
    <answer fraction="0">
      <text>
        <![CDATA[Un objeto JS que puede ser modificado desde dentro del componente, usualmente en el método render]]>
      </text>
    </answer>
    <answer fraction="0">
      <text>
        <![CDATA[Un objeto JS que se define dentro del constructor del componente]]>
      </text>
    </answer>
    <shuffleanswers>1</shuffleanswers>
    <single>true</single>
    <answernumbering>ABCD</answernumbering>
  </question>
  <question type="multichoice">
    <name>
      <text>
        <![CDATA[How can we include styles in React?]]>
      </text>
    </name>
    <questiontext format="html">
      <text>
        <![CDATA[¿Cómo se definen los estilos en React?]]>
      </text>
    </questiontext>
    <answer fraction="100.000">
      <text>
        <![CDATA[Con el atributo style del componente o etiqueta HTML, el cual contendrá un objeto JS]]>
      </text>
    </answer>
    <answer fraction="0">
      <text>
        <![CDATA[Con el atributo style del componente o etiqueta HTML, el cual contendrá código CSS]]>
      </text>
    </answer>
    <answer fraction="0">
      <text>
        <![CDATA[Con el atributo style del componente o etiqueta HTML, el cual contendrá código SCSS]]>
      </text>
    </answer>
    <answer fraction="0">
      <text>
        <![CDATA[Con el atributo style del componente o etiqueta HTML, el cual contendrá código SASS]]>
      </text>
    </answer>
    <shuffleanswers>1</shuffleanswers>
    <single>true</single>
    <answernumbering>ABCD</answernumbering>
  </question>
  <question type="multichoice">
    <name>
      <text>
        <![CDATA[What are React fragments?]]>
      </text>
    </name>
    <questiontext format="html">
      <text>
        <![CDATA[¿Qué son los fragments en React?]]>
      </text>
    </questiontext>
    <answer fraction="100.000">
      <text>
        <![CDATA[Una forma de devolder varios componentes en en método render]]>
      </text>
    </answer>
    <answer fraction="0">
      <text>
        <![CDATA[Una forma de crear plantillas en React]]>
      </text>
    </answer>
    <answer fraction="0">
      <text>
        <![CDATA[Un styled component]]>
      </text>
    </answer>
    <answer fraction="0">
      <text>
        <![CDATA[Un unstyled component]]>
      </text>
    </answer>
    <shuffleanswers>1</shuffleanswers>
    <single>true</single>
    <answernumbering>ABCD</answernumbering>
  </question>
  <question type="multichoice">
    <name>
      <text>
        <![CDATA[What is the difference between "header" and "Header"?]]>
      </text>
    </name>
    <questiontext format="html">
      <text>
        <![CDATA[¿Cuál es la diferencia entre las etiquetas "header" y "Header"?]]>
      </text>
    </questiontext>
    <answer fraction="100.000">
      <text>
        <![CDATA["Header" es un componente de React  definido por nosotros y "header" es una etiqueta HTML]]>
      </text>
    </answer>
    <answer fraction="0">
      <text>
        <![CDATA[No hay diferencia. Son iguales.]]>
      </text>
    </answer>
    <answer fraction="0">
      <text>
        <![CDATA[Depende de cómo configuremos el transpilador Babel]]>
      </text>
    </answer>
    <answer fraction="0">
      <text>
        <![CDATA["Header" es una palabra reservada por ser una etiqueta HTML, así que no puede utilizarse para definir un componente de React]]>
      </text>
    </answer>
    <shuffleanswers>1</shuffleanswers>
    <single>true</single>
    <answernumbering>ABCD</answernumbering>
  </question>
  <question type="multichoice">
    <name>
      <text>
        <![CDATA[Which of the following statements is FALSE?]]>
      </text>
    </name>
    <questiontext format="html">
      <text>
        <![CDATA[¿Cuál de las siguientes afirmaciones es FALSA?]]>
      </text>
    </questiontext>
    <answer fraction="100.000">
      <text>
        <![CDATA[JSX puede ser interpretado directamente por los navegadores]]>
      </text>
    </answer>
    <answer fraction="0">
      <text>
        <![CDATA[JSX debe ser transpilado para ser transpilado por los navegadores]]>
      </text>
    </answer>
    <answer fraction="0">
      <text>
        <![CDATA[Los navegadores pueden usar una librería especial para interpretar JSX]]>
      </text>
    </answer>
    <answer fraction="0">
      <text>
        <![CDATA[Podemos escribir componentes de React sin JSX, usando sólo JS]]>
      </text>
    </answer>
    <shuffleanswers>1</shuffleanswers>
    <single>true</single>
    <answernumbering>ABCD</answernumbering>
  </question>

  <question type="multichoice">
    <name>
      <text>
        <![CDATA[Which of the following statements is FALSE?]]>
      </text>
    </name>
    <questiontext format="html">
      <text>
        <![CDATA[¿Cuál de las siguientes afirmaciones es FALSA?]]>
      </text>
    </questiontext>
    <answer fraction="100.000">
      <text>
        <![CDATA[Un componente es una plantilla en la que se puede interpolar datos usando las props, las cuales son inmutables]]>
      </text>
    </answer>
    <answer fraction="0">
      <text>
        <![CDATA[Un componente es una función que devuelve el HTML a renderizar]]>
      </text>
    </answer>
    <answer fraction="0">
      <text>
        <![CDATA[Un componente es una clase que extiende React.Component y que tiene por lo menos un método render]]>
      </text>
    </answer>
    <answer fraction="0">
      <text>
        <![CDATA[Un componente tiene proprs (inmutables) y un estado (mutable)]]>
      </text>
    </answer>
    <shuffleanswers>1</shuffleanswers>
    <single>true</single>
    <answernumbering>ABCD</answernumbering>
  </question>
  <question type="multichoice">
    <name>
      <text>
        <![CDATA[What is a component in a Single Page Application?]]>
      </text>
    </name>
    <questiontext format="html">
      <text>
        <![CDATA[¿Qué es un componente en una Single Page Application?]]>
      </text>
    </questiontext>
    <answer fraction="100.000">
      <text>
        <![CDATA[Cada parte de la interfaz de usuario]]>
      </text>
    </answer>
    <answer fraction="0">
      <text>
        <![CDATA[Cada parte interactiva de la interfaz de usuario (por ejemplo botones e inputs)]]>
      </text>
    </answer>
    <answer fraction="0">
      <text>
        <![CDATA[Cada parte estática de la interfaz de usuario (por ejemplo divs y h1)]]>
      </text>
    </answer>
    <answer fraction="0">
      <text>
        <![CDATA[Cada página de nuestro sitio web]]>
      </text>
    </answer>
    <shuffleanswers>1</shuffleanswers>
    <single>true</single>
    <answernumbering>ABCD</answernumbering>
  </question>
  <question type="multichoice">
    <name>
      <text>
        <![CDATA[How is the event flow in React?]]>
      </text>
    </name>
    <questiontext format="html">
      <text>
        <![CDATA[¿Cómo es el flujo de EVENTOS en React?]]>
      </text>
    </questiontext>
    <answer fraction="100.000">
      <text>
        <![CDATA[Unidireccional, de componentes hijos a padres]]>
      </text>
    </answer>
    <answer fraction="0">
      <text>
          <![CDATA[Unidireccional, de componentes padres a hijos]]>
      </text>
    </answer>
    <answer fraction="0">
      <text>
        <![CDATA[Bidireccional (two way event binding)]]>
      </text>
    </answer>
    <answer fraction="0">
      <text>
        <![CDATA[Puede ser unidireccional o bidireccional]]>
      </text>
    </answer>
    <shuffleanswers>1</shuffleanswers>
    <single>true</single>
    <answernumbering>ABCD</answernumbering>
  </question>
  <question type="multichoice">
    <name>
      <text>
        <![CDATA[What library performs the reconciliation process in React?]]>
      </text>
    </name>
    <questiontext format="html">
      <text>
        <![CDATA[¿Qué librería se encarga de realizar el proceso de reconciliación en React?]]>
      </text>
    </questiontext>
    <answer fraction="100.000">
      <text>
        <![CDATA[ReactDOM]]>
      </text>
    </answer>
    <answer fraction="0">
      <text>
        <![CDATA[No se necesita ninguna librería, lo hace automáticamente el DOM]]>
      </text>
    </answer>
    <answer fraction="0">
      <text>
        <![CDATA[NPM]]>
      </text>
    </answer>
    <answer fraction="0">
      <text>
        <![CDATA[Webpack]]>
      </text>
    </answer>
    <answer fraction="0">
      <text>
        <![CDATA[Babel]]>
      </text>
    </answer>
    <shuffleanswers>1</shuffleanswers>
    <single>true</single>
    <answernumbering>ABCD</answernumbering>
  </question>
  <question type="multichoice">
    <name>
      <text>
        <![CDATA[Which one of the following characteristics does React NOT have?]]>
      </text>
    </name>
    <questiontext format="html">
      <text>
        <![CDATA[¿Cuál de las siguientes características NO es propia de React?]]>
      </text>
    </questiontext>
    <answer fraction="100.000">
      <text>
        <![CDATA[Shadow DOM]]>
      </text>
    </answer>
    <answer fraction="0">
      <text>
        <![CDATA[Basado en componentes]]>
      </text>
    </answer>
    <answer fraction="0">
      <text>
        <![CDATA[Virtual DOM]]>
      </text>
    </answer>
    <answer fraction="0">
      <text>
        <![CDATA[Flujo unidireccional de datos (one way data binding)]]>
      </text>
    </answer>
    <shuffleanswers>1</shuffleanswers>
    <single>true</single>
    <answernumbering>ABCD</answernumbering>
  </question>
  <question type="multichoice">
    <name>
      <text>
        <![CDATA[What is the virtual DOM?]]>
      </text>
    </name>
    <questiontext format="html">
      <text>
        <![CDATA[¿Qué es el Virtual DOM?]]>
      </text>
    </questiontext>
    <answer fraction="100.000">
      <text>
        <![CDATA[Una representación del DOM en memoria]]>
      </text>
    </answer>
    <answer fraction="0">
      <text>
        <![CDATA[Es una copia JSON del DOM]]>
      </text>
    </answer>
    <answer fraction="0">
      <text>
        <![CDATA[Es una técnica programática que usan algunos developers para acceder al DOM real y modificarlo de forma eficiente]]>
      </text>
    </answer>
    <answer fraction="0">
      <text>
        <![CDATA[Es una técnica programática que usan algunos frameworks con two-way-data-binding para unir el DOM y su copia]]>
      </text>
    </answer>
    <shuffleanswers>1</shuffleanswers>
    <single>true</single>
    <answernumbering>ABCD</answernumbering>
  </question>
    <question type="multichoice">
    <name>
      <text>
        <![CDATA[What is React?]]>
      </text>
    </name>
    <questiontext format="html">
      <text>
        <![CDATA[¿Qué es React?]]>
      </text>
    </questiontext>
    <answer fraction="100.000">
      <text>
        <![CDATA[Una librería JavaScript para crear interfaces de usuario]]>
      </text>
    </answer>
    <answer fraction="0">
      <text>
        <![CDATA[Una librería MVC para crear interfaces de usuario]]>
      </text>
    </answer>
    <answer fraction="0">
      <text>
        <![CDATA[Un framework completo para crear interfaces de usuario]]>
      </text>
    </answer>
    <answer fraction="0">
      <text>
        <![CDATA[Un paquete de Webpack para crear interfaces de usuario]]>
      </text>
    </answer>
    <shuffleanswers>1</shuffleanswers>
    <single>true</single>
    <answernumbering>ABCD</answernumbering>
  </question>
  <!-- Question entry 36 -->
  <question type="multichoice">
    <name>
      <text>
        <![CDATA[What do we need to transfer from Redux to React?]]>
      </text>
    </name>
    <questiontext format="html">
      <text>
        <![CDATA[¿Qué se necesita pasar de Redux a React?]]>
      </text>
    </questiontext>
    <answer fraction="100.000">
      <text>
        <![CDATA[Estado y acciones]]>
      </text>
    </answer>
    <answer fraction="0">
      <text>
        <![CDATA[Store y reducers]]>
      </text>
    </answer>
    <answer fraction="0">
      <text>
        <![CDATA[Store, reducers, estado y acciones]]>
      </text>
    </answer>
    <answer fraction="0">
      <text>
        <![CDATA[Nada, todo está accesible puesto que Redux es una librería de React]]>
      </text>
    </answer>
    <shuffleanswers>1</shuffleanswers>
    <single>true</single>
    <answernumbering>ABCD</answernumbering>
  </question>
  <question type="multichoice">
    <name>
      <text>
        <![CDATA[How many reducers does a Redux architecture present?]]>
      </text>
    </name>
    <questiontext format="html">
      <text>
        <![CDATA[¿Cuántos reducers presenta una arquitectur Redux?]]>
      </text>
    </questiontext>
    <answer fraction="100.000">
      <text>
        <![CDATA[Tantos como quiera el programador. Se combinarán en un único reducer con el método combineReducers() de la API de Redux]]>
      </text>
    </answer>
    <answer fraction="0">
      <text>
        <![CDATA[Tantos como quiera el programador. Cada store se une al resto a través del método subscribe(listener)]]>
      </text>
    </answer>
    <answer fraction="0">
      <text>
        <![CDATA[Uno]]>
      </text>
    </answer>
    <answer fraction="0">
      <text>
        <![CDATA[Dos]]>
      </text>
    </answer>
    <shuffleanswers>1</shuffleanswers>
    <single>true</single>
    <answernumbering>ABCD</answernumbering>
  </question>
    <question type="multichoice">
    <name>
      <text>
        <![CDATA[How many stores does a Redux architecture present?]]>
      </text>
    </name>
    <questiontext format="html">
      <text>
        <![CDATA[¿Cuántos stores presenta la arquitectura de Redux?]]>
      </text>
    </questiontext>
    <answer fraction="100.000">
      <text>
        <![CDATA[Uno]]>
      </text>
    </answer>
    <answer fraction="0">
      <text>
        <![CDATA[Dos]]>
      </text>
    </answer>
    <answer fraction="0">
      <text>
        <![CDATA[Tantos como quiera el programador. Cada store se une al resto a través del método subscribe(listener)]]>
      </text>
    </answer>
    <answer fraction="0">
      <text>
        <![CDATA[Tantos como quiera el programador. Se combinarán en un único stone con el método combineStores() de la API de Redux]]>
      </text>
    </answer>
    <shuffleanswers>1</shuffleanswers>
    <single>true</single>
    <answernumbering>ABCD</answernumbering>
  </question>
  <question type="multichoice">
    <name>
      <text>
        <![CDATA[What is the Redux store?]]>
      </text>
    </name>
    <questiontext format="html">
      <text>
        <![CDATA[¿Qué es el store de Redux?]]>
      </text>
    </questiontext>
    <answer fraction="100.000">
      <text>
        <![CDATA[Es el objeto que une el estado con los reducers]]>
      </text>
    </answer>
    <answer fraction="0">
      <text>
        <![CDATA[Es el objeto que une el dispatcher con las vistas]]>
      </text>
    </answer>
    <answer fraction="0">
      <text>
        <![CDATA[Es el objeto que une las acciones con los reducers]]>
      </text>
    </answer>
    <answer fraction="0">
      <text>
        <![CDATA[Es el objeto que une el estado con las acciones]]>
      </text>
    </answer>
    <shuffleanswers>1</shuffleanswers>
    <single>true</single>
    <answernumbering>ABCD</answernumbering>
  </question>
  <question type="multichoice">
    <name>
      <text>
        <![CDATA[What of the next actions can be done inside a reducer?]]>
      </text>
    </name>
    <questiontext format="html">
      <text>
        <![CDATA[¿Cuál de las siguientes acciones se puede realizar dentro de un reducer?]]>
      </text>
    </questiontext>
    <answer fraction="100.000">
      <text>
        <![CDATA[Un bloque switch a partir de action.type]]>
      </text>
    </answer>
    <answer fraction="0">
      <text>
        <![CDATA[Modificar el estado que se pasa como arguumento al reducer]]>
      </text>
    </answer>
    <answer fraction="0">
      <text>
        <![CDATA[Llamadas a API]]>
      </text>
    </answer>
    <answer fraction="0">
      <text>
        <![CDATA[Usar Math.random()]]>
      </text>
    </answer>
    <shuffleanswers>1</shuffleanswers>
    <single>true</single>
    <answernumbering>ABCD</answernumbering>
  </question>
  <question type="multichoice">
    <name>
      <text>
        <![CDATA[What is a Redux action?]]>
      </text>
    </name>
    <questiontext format="html">
      <text>
        <![CDATA[¿Qué es una acción de Redux?]]>
      </text>
    </questiontext>
    <answer fraction="100.000">
      <text>
        <![CDATA[Un objeto JS que describe el cambio a realizar en el estado]]>
      </text>
    </answer>
    <answer fraction="0">
      <text>
        <![CDATA[Un objeto JS despachado para notificar a los componentes que algo ha cambiado en el estado]]>
      </text>
    </answer>
    <answer fraction="0">
      <text>
        <![CDATA[Una acción es una llamada al store para modificar el estado]]>
      </text>
    </answer>
    <answer fraction="0">
      <text>
        <![CDATA[Una acción es una llamada al dispatcher para modificar el estado]]>
      </text>
    </answer>
    <shuffleanswers>1</shuffleanswers>
    <single>true</single>
    <answernumbering>ABCD</answernumbering>
  </question>
  <question type="multichoice">
    <name>
      <text>
        <![CDATA[What are the different pieces that Redux consists of?]]>
      </text>
    </name>
    <questiontext format="html">
      <text>
        <![CDATA[¿Cuáles son las piezas que componen Redux?]]>
      </text>
    </questiontext>
    <answer fraction="100.000">
      <text>
        <![CDATA[Actions, Reducers, Store, State, User Interface]]>
      </text>
    </answer>
    <answer fraction="0">
      <text>
        <![CDATA[Actions, Dispatcher, Stores, User Interface]]>
      </text>
    </answer>
    <answer fraction="0">
      <text>
        <![CDATA[Actions, Reducers, Dispatcher, State, User Interface]]>
      </text>
    </answer>
    <answer fraction="0">
      <text>
        <![CDATA[Actions, Reducers, React Components, State, User Interface]]>
      </text>
    </answer>
    <shuffleanswers>1</shuffleanswers>
    <single>true</single>
    <answernumbering>ABCD</answernumbering>
  </question>
  <question type="multichoice">
    <name>
      <text>
        <![CDATA[What is a reducer?]]>
      </text>
    </name>
    <questiontext format="html">
      <text>
        <![CDATA[¿Qué es un reducer?]]>
      </text>
    </questiontext>
    <answer fraction="100.000">
      <text>
        <![CDATA[Una función pura que que toma el estado anterior y la acción realizada y devuelve el siguiente estado]]>
      </text>
    </answer>
    <answer fraction="0">
      <text>
        <![CDATA[Una función que toma el estado anterior y una acción y modifica el estado recibido a partir de la acción]]>
      </text>
    </answer>
    <answer fraction="0">
      <text>
        <![CDATA[Una función que toma como estado inicial y el array de acciones y devuelve el siguiente estado]]>
      </text>
    </answer>
    <answer fraction="0">
      <text>
        <![CDATA[Una función que reduce la información que está duplicada entre el estado y las acciones]]>
      </text>
    </answer>
    <shuffleanswers>1</shuffleanswers>
    <single>true</single>
    <answernumbering>ABCD</answernumbering>
  </question>
    <question type="multichoice">
    <name>
      <text>
        <![CDATA[In Redux, how can we change the state?]]>
      </text>
    </name>
    <questiontext format="html">
      <text>
        <![CDATA[En Redux, ¿cómo podemos cambiar el estado?]]>
      </text>
    </questiontext>
    <answer fraction="100.000">
      <text>
        <![CDATA[La única manera de cambiar el estado es emitiendo una acción, un objeto que describe qué ha pasado]]>
      </text>
    </answer>
    <answer fraction="0">
      <text>
        <![CDATA[La única manera de cambiar el estado es realizar una petición al servidor para cambiarlo, el cuál emitirá una acción para cambiarlo]]>
      </text>
    </answer>
    <answer fraction="0">
      <text>
        <![CDATA[La única manera de cambiar el estado esrealizar una petición al servidor para cambiarlo, el cuál modificará el estado y notificará al resto de componentes]]>
      </text>
    </answer>
    <answer fraction="0">
      <text>
        <![CDATA[Puedes cambiar el estado directamente, el dispatcher observará el cambio y notificárá al resto de componentes]]>
      </text>
    </answer>
    <shuffleanswers>1</shuffleanswers>
    <single>true</single>
    <answernumbering>ABCD</answernumbering>
  </question>
  <question type="multichoice">
    <name>
      <text>
        <![CDATA[What does Redux first principle "single source of truth" mean?]]>
      </text>
    </name>
    <questiontext format="html">
      <text>
        <![CDATA[¿Que significa el principio de "single source of truth" de Redux?]]>
      </text>
    </questiontext>
    <answer fraction="100.000">
      <text>
        <![CDATA[El estado de la aplicación entera se almacena como un objeto en el store]]>
      </text>
    </answer>
    <answer fraction="0">
      <text>
        <![CDATA[El estado de la aplicación entera se almacena como un objeto en el dispatcher]]>
      </text>
    </answer>
    <answer fraction="0">
      <text>
        <![CDATA[El estado de la aplicación entera no está accesible, cada componente tiene que preguntar al store o al servidor cómo obtenerlo]]>
      </text>
    </answer>
    <answer fraction="0">
      <text>
        <![CDATA[El estado de la aplicación entera no está accesible, cada componente tiene que preguntar al dispatcher o al servidor cómo obtenerlo]]>
      </text>
    </answer>
    <shuffleanswers>1</shuffleanswers>
    <single>true</single>
    <answernumbering>ABCD</answernumbering>
  </question>

</quiz>
